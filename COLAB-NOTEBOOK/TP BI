{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPH7kztpsPAsaifteP/fF5j"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rtd7uWb2UQAs","executionInfo":{"status":"ok","timestamp":1732496462159,"user_tz":180,"elapsed":269,"user":{"displayName":"Nicolas Prosperi","userId":"10161961860091181701"}},"outputId":"3d16f0e8-78b4-4512-b40d-693f0869f980"},"outputs":[{"output_type":"stream","name":"stdout","text":["Base de datos creada con éxito.\n"]}],"source":["#--------------BASE DE DATOS TICKETERA---------------------------------------\n","import sqlite3\n","\n","# Conexión a la base de datos SQLite (se guarda en un archivo local)\n","conn = sqlite3.connect('ticket_database.db')\n","cursor = conn.cursor()\n","\n","# Crear tablas\n","queries = [\n","    # Tabla localidad con nombre_localidad agregado\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS localidad (\n","        id_localidad INTEGER PRIMARY KEY AUTOINCREMENT,\n","        sector_localidad CHAR(1) NOT NULL,\n","        fila_localidad INT NOT NULL,\n","        numero_localidad INT NOT NULL,\n","        nombre_localidad VARCHAR(45)\n","    );\n","    \"\"\",\n","    # Tabla evento\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS evento (\n","        id_evento INTEGER PRIMARY KEY AUTOINCREMENT,\n","        descripcion VARCHAR(255) NOT NULL,\n","        fecha DATE NOT NULL\n","    );\n","    \"\"\",\n","    # Tabla cliente\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS cliente (\n","        id_cliente INTEGER PRIMARY KEY AUTOINCREMENT,\n","        nombre VARCHAR(255) NOT NULL,\n","        apellido VARCHAR(255) NOT NULL,\n","        email VARCHAR(255) NOT NULL UNIQUE\n","    );\n","    \"\"\",\n","    # Tabla tipo_producto\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS tipo_producto (\n","        id_tipo_producto INTEGER PRIMARY KEY AUTOINCREMENT,\n","        descripcion VARCHAR(255) NOT NULL\n","    );\n","    \"\"\",\n","    # Tabla producto_base\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS producto_base (\n","        id_producto INTEGER PRIMARY KEY AUTOINCREMENT,\n","        nombre VARCHAR(255) NOT NULL,\n","        descripcion TEXT,\n","        precio DECIMAL(10, 2) NOT NULL,\n","        id_tipo_producto INTEGER NOT NULL,\n","        FOREIGN KEY (id_tipo_producto) REFERENCES tipo_producto (id_tipo_producto)\n","    );\n","    \"\"\",\n","    # Tabla localidad_evento\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS localidad_evento (\n","        id_localidad INTEGER NOT NULL,\n","        id_evento INTEGER NOT NULL,\n","        estado TEXT CHECK (estado IN ('Disponible', 'Reservada', 'Vendida', 'Escaneada OK', 'No Disponible', \"Anulada\")) DEFAULT 'Disponible',\n","        localia BOOLEAN,\n","        PRIMARY KEY (id_localidad, id_evento),\n","        FOREIGN KEY (id_evento) REFERENCES evento (id_evento),\n","        FOREIGN KEY (id_localidad) REFERENCES localidad (id_localidad)\n","    );\n","    \"\"\",\n","    # Tabla ticket_evento con FK a factura agregada\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS ticket_evento (\n","        id_ticket_evento INTEGER PRIMARY KEY AUTOINCREMENT,\n","        id_producto INTEGER,\n","        id_localidad INTEGER NOT NULL,\n","        id_evento INTEGER NOT NULL,\n","        id_item_factura INTEGER,\n","        nombre_persona_ocupante VARCHAR(100) NOT NULL,\n","        dni_persona_ocupante VARCHAR(100) NOT NULL,\n","        FOREIGN KEY (id_localidad) REFERENCES localidad (id_localidad),\n","        FOREIGN KEY (id_evento) REFERENCES evento (id_evento),\n","        FOREIGN KEY (id_producto) REFERENCES producto_base (id_producto),\n","        FOREIGN KEY (id_item_factura) REFERENCES item_factura (id_item)\n","    );\n","    \"\"\",\n","    # Tabla factura\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS factura (\n","        id_factura INTEGER PRIMARY KEY AUTOINCREMENT,\n","        fecha TIMESTAMP NOT NULL,\n","        id_cliente INTEGER,\n","        total DECIMAL(10, 2) NOT NULL,\n","        FOREIGN KEY (id_cliente) REFERENCES cliente (id_cliente)\n","    );\n","    \"\"\",\n","    # Tabla item_factura\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS item_factura (\n","        id_item INTEGER PRIMARY KEY AUTOINCREMENT,\n","        id_factura INTEGER,\n","        id_producto_base INTEGER,\n","        cantidad INT NOT NULL,\n","        precio_unitario DECIMAL(10, 2) NOT NULL,\n","        FOREIGN KEY (id_factura) REFERENCES factura (id_factura),\n","        FOREIGN KEY (id_producto_base) REFERENCES producto_base (id_producto)\n","    );\n","    \"\"\",\n","    # Tabla producto_merchandising\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS producto_merchandising (\n","        id_producto INTEGER PRIMARY KEY AUTOINCREMENT,\n","        id_producto_base INTEGER,\n","        stock INT NOT NULL,\n","        FOREIGN KEY (id_producto_base) REFERENCES producto_base (id_producto)\n","    );\n","    \"\"\",\n","    # Tabla encuentro_deportivo\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS encuentro_deportivo (\n","        id_evento INTEGER NOT NULL,\n","        equipo_local INTEGER NOT NULL,\n","        equipo_visitante INTEGER NOT NULL,\n","        PRIMARY KEY (id_evento),\n","        FOREIGN KEY (id_evento) REFERENCES evento (id_evento),\n","        FOREIGN KEY (equipo_local) REFERENCES equipo (id_equipo),\n","        FOREIGN KEY (equipo_visitante) REFERENCES equipo (id_equipo)\n","    );\n","    \"\"\",\n","    # Tabla equipo\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS equipo (\n","        id_equipo INTEGER PRIMARY KEY AUTOINCREMENT,\n","        nombre TEXT NOT NULL UNIQUE,\n","        pais TEXT\n","    );\n","    \"\"\",\n","    # Tabla objetivos_equipo\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS objetivos_equipo (\n","        equipo INTEGER NOT NULL,\n","        mes_anio TEXT NOT NULL,\n","        monto REAL NOT NULL,\n","        PRIMARY KEY (equipo, mes_anio),\n","        FOREIGN KEY (equipo) REFERENCES equipo (id_equipo)\n","        ON DELETE NO ACTION\n","        ON UPDATE NO ACTION\n","    );\n","    \"\"\"\n","]\n","\n","# Ejecutar todas las consultas\n","for query in queries:\n","    cursor.execute(query)\n","\n","# Confirmar los cambios y cerrar la conexión\n","conn.commit()\n","conn.close()\n","\n","print(\"Base de datos creada con éxito.\")"]},{"cell_type":"code","source":["#-----------DATAWAREHOUSE----------------------------------------\n","\n","import sqlite3\n","\n","# Conexión a la base de datos de análisis\n","conn = sqlite3.connect('tickets_dw.db')\n","cursor = conn.cursor()\n","\n","# Crear las tablas\n","queries_dw = [\n","    # Tabla fecha_dimension\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS fecha_dimension (\n","        mes_anio DATE NOT NULL,\n","        fecha_id VARCHAR(6) NOT NULL UNIQUE,\n","        PRIMARY KEY (fecha_id)\n","    );\n","    \"\"\",\n","    # Tabla fact_table\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS fact_table (\n","        nombre_evento VARCHAR(255) NOT NULL,\n","        equipo_local VARCHAR(45),\n","        equipo_visitante VARCHAR(45),\n","        tipo_evento VARCHAR(45),\n","        localidad_evento_estado VARCHAR(45),\n","        nombre_apellido_cliente VARCHAR(45),\n","        dni_cliente VARCHAR(45),\n","        nombre_apellido_asistente VARCHAR(45),\n","        dni_asistente VARCHAR(45),\n","        precio DECIMAL(10, 2),\n","        equipo_ticket VARCHAR(45),\n","        fecha_id VARCHAR(6),\n","        FOREIGN KEY (fecha_id) REFERENCES fecha_dimension (fecha_id)\n","    );\n","    \"\"\",\n","    # Tabla total_ventas_equipo_objetivos\n","    \"\"\"\n","    CREATE TABLE IF NOT EXISTS total_ventas_equipo_objetivos (\n","        idtotal_ventas_equipo_objetivos INTEGER PRIMARY KEY AUTOINCREMENT,\n","        nombre_equipo VARCHAR(45) NOT NULL,\n","        total_ventas_mes DOUBLE NOT NULL,\n","        objetivos_mes DOUBLE NOT NULL,\n","        fecha_id VARCHAR(6) NOT NULL,\n","        FOREIGN KEY (fecha_id) REFERENCES fecha_dimension (fecha_id)\n","    );\n","    \"\"\"\n","]\n","\n","# Ejecutar todas las consultas\n","for query in queries_dw:\n","    cursor.execute(query)\n","\n","# Confirmar los cambios y cerrar la conexión\n","conn.commit()\n","conn.close()\n","\n","print(\"Base de datos de análisis creada con éxito.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GzsbKt5lUwbO","executionInfo":{"status":"ok","timestamp":1732497440331,"user_tz":180,"elapsed":253,"user":{"displayName":"Nicolas Prosperi","userId":"10161961860091181701"}},"outputId":"842679ea-86d4-45f1-9b94-cb9effe68d5e"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Base de datos de análisis creada con éxito.\n"]}]},{"cell_type":"code","source":["#-----------CARGA DE CSV------------------\n","\n","import sqlite3\n","import pandas as pd\n","\n","# Conexión a la base de datos\n","db_path = \"ticket_database.db\"\n","conn = sqlite3.connect(db_path)\n","\n","tables = [\n","    \"localidad\",\n","    \"evento\",\n","    \"cliente\",\n","    \"tipo_producto\",\n","    \"producto_base\",\n","    \"localidad_evento\",\n","    \"ticket_evento\",\n","    \"factura\",\n","    \"item_factura\",\n","    \"producto_merchandising\",\n","    \"equipo\",\n","    \"encuentro_deportivo\",\n","    \"objetivos_equipo\"\n","    ]\n","\n","# Truncar (vaciar) las tablas\n","for table_name in tables:\n","    conn.execute(f\"DELETE FROM {table_name};\")\n","    print(f\"Tabla {table_name} truncada.\")\n","\n","# Cargar cada archivo CSV en su tabla correspondiente\n","csv_files = {\n","    \"localidad\": \"./DATA/localidad.csv\",\n","    \"evento\": \"./DATA/evento.csv\",\n","    \"cliente\": \"./DATA/cliente.csv\",\n","    \"tipo_producto\": \"./DATA/tipo_producto.csv\",\n","    \"producto_base\": \"./DATA/producto_base.csv\",\n","    \"localidad_evento\": \"./DATA/localidad_evento.csv\",\n","    \"ticket_evento\": \"./DATA/ticket_evento.csv\",\n","    \"factura\": \"./DATA/factura.csv\",\n","    \"item_factura\": \"./DATA/item_factura.csv\",\n","    \"producto_merchandising\": \"./DATA/producto_merchandising.csv\",\n","    \"equipo\": \"./DATA/equipo.csv\",\n","    \"encuentro_deportivo\": \"./DATA/encuentro_deportivo.csv\",\n","    \"objetivos_equipo\":\"./DATA/objetivo_equipo.csv\"\n","}\n","\n","for table_name, file_path in csv_files.items():\n","    # Leer CSV\n","    df = pd.read_csv(file_path)\n","\n","    # Cargar datos en la tabla\n","    df.to_sql(table_name, conn, if_exists=\"append\", index=False)\n","\n","# Verificación de datos cargados\n","for table_name in csv_files.keys():\n","    print(f\"Datos cargados en la tabla: {table_name}\")\n","    query = f\"SELECT * FROM {table_name} LIMIT 5\"\n","    result = pd.read_sql_query(query, conn)\n","    print(result)\n","\n","# Cerrar conexión\n","conn.close()"],"metadata":{"id":"5kfQXx25VX3r","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732496468441,"user_tz":180,"elapsed":655,"user":{"displayName":"Nicolas Prosperi","userId":"10161961860091181701"}},"outputId":"6e53dcec-e99d-4ce8-d707-ac40780756da"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Tabla localidad truncada.\n","Tabla evento truncada.\n","Tabla cliente truncada.\n","Tabla tipo_producto truncada.\n","Tabla producto_base truncada.\n","Tabla localidad_evento truncada.\n","Tabla ticket_evento truncada.\n","Tabla factura truncada.\n","Tabla item_factura truncada.\n","Tabla producto_merchandising truncada.\n","Tabla equipo truncada.\n","Tabla encuentro_deportivo truncada.\n","Tabla objetivos_equipo truncada.\n","Datos cargados en la tabla: localidad\n","   id_localidad sector_localidad  fila_localidad  numero_localidad  \\\n","0             1                A               1                 1   \n","1             2                A               1                 2   \n","2             3                A               1                 3   \n","3             4                A               1                 4   \n","4             5                A               1                 5   \n","\n","  nombre_localidad  \n","0    Estadio River  \n","1    Estadio River  \n","2    Estadio River  \n","3    Estadio River  \n","4    Estadio River  \n","Datos cargados en la tabla: evento\n","   id_evento           descripcion       fecha\n","0          1  Campeonato Argentino  2024-06-01\n","1          2  Campeonato Argentino  2024-06-01\n","2          3  Campeonato Argentino  2024-06-08\n","3          4  Campeonato Argentino  2024-06-08\n","4          5  Campeonato Argentino  2024-06-15\n","Datos cargados en la tabla: cliente\n","   id_cliente nombre   apellido                        email\n","0           1   Juan      Pérez         juanperez@domain.com\n","1           2    Ana   González      anagaonzalez@domain.com\n","2           3  Pedro    Ramírez      pedroramirez@domain.com\n","3           4  Carla  Fernandez  carla.fernandez@example.com\n","4           5   Luis   Martínez    luis.martinez@example.com\n","Datos cargados en la tabla: tipo_producto\n","   id_tipo_producto     descripcion\n","0                 1         Entrada\n","1                 2   Merchandising\n","2                 3          Bebida\n","3                 4  Entrada a tour\n","Datos cargados en la tabla: producto_base\n","   id_producto              nombre                           descripcion  \\\n","0            1         Entrada VIP  Acceso preferencial y zona exclusiva   \n","1            2     Entrada General                       Acceso estándar   \n","2            3    Camiseta Oficial                   Camiseta del evento   \n","3            4  Bebida Refrescante                       Botella de agua   \n","\n","   precio  id_tipo_producto  \n","0   150.0                 1  \n","1    50.0                 1  \n","2    25.0                 2  \n","3     2.5                 3  \n","Datos cargados en la tabla: localidad_evento\n","   id_localidad  id_evento        estado  localia\n","0             1          1  Escaneada OK        1\n","1             1          2  Escaneada OK        1\n","2             1          3  Escaneada OK        1\n","3             1          4  Escaneada OK        1\n","4             2          1  Escaneada OK        1\n","Datos cargados en la tabla: ticket_evento\n","   id_ticket_evento  id_producto  id_localidad  id_evento  id_item_factura  \\\n","0                 1            1             1          1                1   \n","1                 2            2             2          1                2   \n","2                 3            1             3          1                3   \n","3                 4            1             4          1                4   \n","4                 5            2             5          1                5   \n","\n","  nombre_persona_ocupante dni_persona_ocupante  \n","0           José Martínez             12345678  \n","1         Isabella Flores             23456789  \n","2          Gabriela Gómez             34567890  \n","3              Juan Gómez             12345679  \n","4            Carlos Ramos             23456790  \n","Datos cargados en la tabla: factura\n","   id_factura       fecha  id_cliente  total\n","0           1  2024-06-01           1  15000\n","1           2  2024-06-01           2   5000\n","2           3  2024-06-01           3  15000\n","3           4  2024-06-01           4  15000\n","4           5  2024-06-01           5   5000\n","Datos cargados en la tabla: item_factura\n","   id_item  id_factura  id_producto_base  cantidad  precio_unitario\n","0        1           1                 1         1            15000\n","1        2           2                 2         1             5000\n","2        3           3                 1         1            15000\n","3        4           4                 1         1            15000\n","4        5           5                 2         1             5000\n","Datos cargados en la tabla: producto_merchandising\n","   id_producto  id_producto_base  stock\n","0            1                 3    100\n","1            2                 4    150\n","Datos cargados en la tabla: equipo\n","   id_equipo         nombre       pais\n","0          1   Boca Juniors  Argentina\n","1          2    River Plate  Argentina\n","2          3  Independiente  Argentina\n","3          4    Racing Club  Argentina\n","4          5    San Lorenzo  Argentina\n","Datos cargados en la tabla: encuentro_deportivo\n","   id_evento  equipo_local  equipo_visitante\n","0          1             1                 2\n","1          2             3                 4\n","2          3             5                 6\n","3          4             7                 8\n","4          5             9                10\n","Datos cargados en la tabla: objetivos_equipo\n","   equipo  mes_anio      monto\n","0       1  1/6/2024  1500000.0\n","1       1  1/7/2024  1700000.0\n","2       1  1/8/2024  1400000.0\n","3       1  1/9/2024  2000000.0\n","4       2  1/6/2024  2000000.0\n"]}]},{"cell_type":"code","source":["#-----------ETL FACT TABLE-----------------\n","\n","\n","import sqlite3\n","import pandas as pd\n","\n","# Conexión a las bases de datos\n","conn_tickets = sqlite3.connect(\"ticket_database.db\")\n","conn_dw = sqlite3.connect(\"tickets_dw.db\")\n","\n","# Extract: Leer datos relevantes de la base de datos de tickets\n","query_eventos = \"\"\"\n","SELECT\n","    e.descripcion AS nombre_evento,\n","    e.fecha,\n","    ld.estado AS localidad_evento_estado,\n","    c.nombre || ' ' || c.apellido AS nombre_apellido_cliente,\n","    c.email AS dni_cliente,\n","    te.nombre_persona_ocupante AS nombre_apellido_asistente,\n","    te.dni_persona_ocupante AS dni_asistente,\n","    pb.precio,\n","    el.nombre AS equipo_local,  -- Nombre del equipo local\n","    ev.nombre AS equipo_visitante,  -- Nombre del equipo visitante\n","    ld.localia  -- Agregar el campo 'localia' para decidir el equipo\n","FROM evento e\n","JOIN localidad_evento ld ON e.id_evento = ld.id_evento\n","LEFT JOIN cliente c ON c.id_cliente = (SELECT id_cliente FROM factura f WHERE f.id_factura = ld.id_evento LIMIT 1)\n","LEFT JOIN ticket_evento te ON te.id_localidad = ld.id_localidad\n","LEFT JOIN producto_base pb ON te.id_producto = pb.id_producto\n","LEFT JOIN encuentro_deportivo ed ON e.id_evento = ed.id_evento\n","LEFT JOIN equipo el ON ed.equipo_local = el.id_equipo  -- Unimos con la tabla equipo para el equipo local\n","LEFT JOIN equipo ev ON ed.equipo_visitante = ev.id_equipo  -- Unimos con la tabla equipo para el equipo visitante\n","\"\"\"\n","df_eventos = pd.read_sql(query_eventos, conn_tickets)\n","\n","# Transform: Crear columnas necesarias\n","df_eventos['fecha_id'] = pd.to_datetime(df_eventos['fecha']).dt.strftime('%Y%m')\n","fecha_dimension = df_eventos[['fecha', 'fecha_id']].drop_duplicates()\n","fecha_dimension['mes_anio'] = pd.to_datetime(fecha_dimension['fecha']).dt.to_period('M').astype(str)\n","\n","# Crear la columna 'equipo_ticket' en base al valor de 'localia'\n","df_eventos['equipo_ticket'] = df_eventos.apply(\n","    lambda row: row['equipo_local'] if row['localia'] else row['equipo_visitante'],\n","    axis=1\n",")\n","\n","\n","# Crear la fact_table con los datos transformados\n","fact_table = df_eventos[[\n","    'nombre_evento',\n","    'localidad_evento_estado',\n","    'nombre_apellido_cliente',\n","    'dni_cliente',\n","    'nombre_apellido_asistente',\n","    'dni_asistente',\n","    'precio',\n","    'equipo_ticket',\n","    'equipo_local',  # Ahora tenemos el nombre del equipo local\n","    'equipo_visitante',  # Ahora tenemos el nombre del equipo visitante\n","    'fecha_id'\n","]]\n","\n","# Load: Cargar datos en las tablas del Data Warehouse\n","# Cargar fecha_dimension\n","fecha_dimension_to_load = fecha_dimension[['fecha_id', 'mes_anio']].drop_duplicates()\n","fecha_dimension_to_load.to_sql('fecha_dimension', conn_dw, if_exists='append', index=False)\n","\n","# Cargar fact_table\n","fact_table.to_sql('fact_table', conn_dw, if_exists='append', index=False)\n","\n","# Cerrar conexiones\n","conn_tickets.close()\n","conn_dw.close()\n","\n","print(\"ETL completado exitosamente.\")"],"metadata":{"id":"SD9ZqMscZx_z","executionInfo":{"status":"ok","timestamp":1732499351724,"user_tz":180,"elapsed":264,"user":{"displayName":"Nicolas Prosperi","userId":"10161961860091181701"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"5d7ef04c-5b2c-410b-e5e9-5fb560faae2c"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["ETL completado exitosamente.\n"]}]},{"cell_type":"code","source":["#------------------------ETL CARGA EQUIPOS---------------------------\n","import sqlite3\n","import pandas as pd\n","\n","# Conexiones a las bases de datos\n","conn_relational = sqlite3.connect(\"ticket_database.db\")  # Base de datos relacional\n","conn_dw = sqlite3.connect(\"tickets_dw.db\")              # Data Warehouse\n","\n","# ---- Extract ----\n","# 1. Ventas totales por equipo y mes\n","query_total_ventas = \"\"\"\n","SELECT\n","    CASE\n","        WHEN le.localia THEN el.nombre\n","        ELSE ev.nombre\n","    END AS equipo_ticket,\n","    strftime('%Y%m', e.fecha) AS fecha_id,\n","    SUM(pb.precio) AS total_ventas_mes\n","FROM evento e\n","JOIN localidad_evento le ON e.id_evento = le.id_evento\n","JOIN ticket_evento te ON le.id_localidad = te.id_localidad\n","JOIN producto_base pb ON te.id_producto = pb.id_producto\n","LEFT JOIN encuentro_deportivo ed ON e.id_evento = ed.id_evento\n","LEFT JOIN equipo el ON ed.equipo_local = el.id_equipo\n","LEFT JOIN equipo ev ON ed.equipo_visitante = ev.id_equipo\n","WHERE le.estado = 'Escaneada OK' or 'Vendida'\n","GROUP BY equipo_ticket, fecha_id\n","\"\"\"\n","df_total_ventas = pd.read_sql(query_total_ventas, conn_relational)\n","\n","# 2. Objetivos por equipo y mes\n","query_objetivos = \"\"\"\n","SELECT\n","    eq.nombre AS nombre_equipo,\n","    oe.mes_anio AS fecha_id,\n","    oe.monto AS objetivos_mes\n","FROM objetivos_equipo oe\n","JOIN equipo eq ON oe.equipo = eq.id_equipo\n","\"\"\"\n","df_objetivos = pd.read_sql(query_objetivos, conn_relational)\n","\n","print(df_objetivos)\n","print(df_total_ventas)\n","\n","# ---- Transform ----\n","\n","# Convertir df_objetivos['fecha_id'] al formato YYYYMM (la tabla objetivo tiene format DDMMYY)\n","df_objetivos['fecha_id'] = pd.to_datetime(df_objetivos['fecha_id'], dayfirst=True).dt.strftime('%Y%m')\n","\n","\n","# Combinar datos de ventas con los objetivos\n","df_result = pd.merge(\n","    df_total_ventas,\n","    df_objetivos,\n","    how='left',\n","    left_on=['equipo_ticket', 'fecha_id'],\n","    right_on=['nombre_equipo', 'fecha_id']\n",")\n","\n","# Limpiar y transformar datos\n","df_result = df_result[['equipo_ticket', 'total_ventas_mes', 'objetivos_mes', 'fecha_id']]\n","df_result.rename(columns={'equipo_ticket': 'nombre_equipo'}, inplace=True)\n","\n","# Reemplazar valores nulos en \"objetivos_mes\" con 0\n","df_result['objetivos_mes'] = df_result['objetivos_mes'].fillna(0)\n","\n","# ---- Load ----\n","# Cargar los datos procesados en la tabla del Data Warehouse\n","df_result.to_sql('total_ventas_equipo_objetivos', conn_dw, if_exists='append', index=False)\n","\n","# Cerrar conexiones\n","conn_relational.close()\n","conn_dw.close()\n","\n","print(\"Carga de datos completada con éxito desde la base relacional.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s3144o6-2-4X","executionInfo":{"status":"ok","timestamp":1732499355352,"user_tz":180,"elapsed":306,"user":{"displayName":"Nicolas Prosperi","userId":"10161961860091181701"}},"outputId":"d91723f8-dca3-4ce1-9501-6606fe5bfa5c"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["              nombre_equipo  fecha_id  objetivos_mes\n","0              Boca Juniors  1/6/2024      1500000.0\n","1              Boca Juniors  1/7/2024      1700000.0\n","2              Boca Juniors  1/8/2024      1400000.0\n","3              Boca Juniors  1/9/2024      2000000.0\n","4               River Plate  1/6/2024      2000000.0\n","5               River Plate  1/7/2024      2200000.0\n","6               River Plate  1/8/2024      1900000.0\n","7               River Plate  1/9/2024      2500000.0\n","8             Independiente  1/6/2024      1300000.0\n","9             Independiente  1/7/2024      1400000.0\n","10            Independiente  1/8/2024      1200000.0\n","11            Independiente  1/9/2024      1800000.0\n","12              Racing Club  1/6/2024      5000000.0\n","13              Racing Club  1/7/2024      5400000.0\n","14              Racing Club  1/8/2024      4500000.0\n","15              Racing Club  1/9/2024      5800000.0\n","16              San Lorenzo  1/6/2024      4000000.0\n","17              San Lorenzo  1/7/2024      4300000.0\n","18              San Lorenzo  1/8/2024      3700000.0\n","19              San Lorenzo  1/9/2024      5000000.0\n","20          Vélez Sarsfield  1/6/2024      3200000.0\n","21          Vélez Sarsfield  1/7/2024      3300000.0\n","22          Vélez Sarsfield  1/8/2024      3000000.0\n","23          Vélez Sarsfield  1/9/2024      4000000.0\n","24  Estudiantes de La Plata  1/6/2024      2700000.0\n","25  Estudiantes de La Plata  1/7/2024      2900000.0\n","26  Estudiantes de La Plata  1/8/2024      2500000.0\n","27  Estudiantes de La Plata  1/9/2024      3000000.0\n","28          Rosario Central  1/6/2024      3000000.0\n","29          Rosario Central  1/7/2024      3200000.0\n","30          Rosario Central  1/8/2024      2800000.0\n","31          Rosario Central  1/9/2024      3900000.0\n","32        Newell's Old Boys  1/6/2024      5100000.0\n","33        Newell's Old Boys  1/7/2024      5300000.0\n","34        Newell's Old Boys  1/8/2024      4600000.0\n","35        Newell's Old Boys  1/9/2024      6000000.0\n","36       Argentinos Juniors  1/6/2024      8000000.0\n","37       Argentinos Juniors  1/7/2024      8200000.0\n","38       Argentinos Juniors  1/8/2024      7000000.0\n","39       Argentinos Juniors  1/9/2024      9000000.0\n","             equipo_ticket fecha_id  total_ventas_mes\n","0             Boca Juniors   202406            120000\n","1  Estudiantes de La Plata   202406            117800\n","2            Independiente   202406            120000\n","3              San Lorenzo   202406            115200\n","Carga de datos completada con éxito desde la base relacional.\n"]}]},{"cell_type":"code","source":["\n","#-------------DATOS DEL WAREHOUSE---------------\n","\n","import sqlite3\n","import pandas as pd\n","\n","# Conexión al data warehouse\n","conn_dw = sqlite3.connect(\"tickets_dw.db\")\n","\n","# Consulta SQL para unir total_ventas_equipo_objetivos con fecha_dimension\n","query = \"\"\"\n","SELECT *\n","FROM total_ventas_equipo_objetivos\n","\"\"\"\n","\n","# Ejecutar la consulta y cargar los resultados en un DataFrame\n","\n","\n","query_eventos_mas_vendidos = \"\"\"\n","SELECT\n","    nombre_equipo,\n","    SUM(total_ventas_mes) AS total_ventas\n","FROM total_ventas_equipo_objetivos\n","WHERE fecha_id LIKE '2024%' -- Filtrar por el año 2024\n","GROUP BY nombre_equipo\n","ORDER BY total_ventas DESC;\n","\"\"\"\n","\n","query_equipo_con_mas_fans = \"\"\"\n","SELECT\n","    nombre_equipo,\n","    SUM(total_ventas_mes) AS total_ventas\n","FROM total_ventas_equipo_objetivos\n","WHERE fecha_id LIKE '2024%' -- Filtrar por el año 2024\n","GROUP BY nombre_equipo\n","ORDER BY total_ventas DESC\n","LIMIT 1;\n","\"\"\"\n","# Ejecutar la consulta y cargar los resultados en un DataFrame\n","\n","\n","query_mayor_cantidad_eventos = \"\"\"\n","SELECT\n","    substr(fecha_id, 5, 2) AS mes,\n","    COUNT(*) AS total_eventos\n","FROM total_ventas_equipo_objetivos\n","GROUP BY mes\n","ORDER BY total_eventos DESC\n","LIMIT 1;\n","\"\"\"\n","# Consulta para calcular la asistencia media mensual\n","query_asistencia_media_mensual = \"\"\"\n","SELECT\n","    AVG(total_ventas_mes) AS asistencia_media_mensual\n","FROM total_ventas_equipo_objetivos\n","WHERE fecha_id LIKE '2024%';\n","\"\"\"\n","\n","# Consulta para el top 10 de clientes por equipo\n","query_top_clientes_por_equipo = \"\"\"\n","SELECT\n","    equipo_ticket AS nombre_equipo,\n","    nombre_apellido_cliente AS cliente,\n","    dni_cliente,\n","    COUNT(*) AS total_tickets_comprados,\n","    SUM(precio) AS monto_total_invertido\n","FROM fact_table\n","WHERE localidad_evento_estado = 'Escaneada OK'  -- Consideramos los tickets efectivamente utilizados\n","GROUP BY equipo_ticket, nombre_apellido_cliente, dni_cliente\n","ORDER BY equipo_ticket, monto_total_invertido DESC, total_tickets_comprados DESC\n","LIMIT 10;\n","\"\"\"\n","\n","# Consulta para el top 10 de clientes a nivel ticketera\n","query_top_clientes_ticketera = \"\"\"\n","SELECT\n","    nombre_apellido_cliente AS cliente,\n","    dni_cliente,\n","    COUNT(*) AS total_tickets_comprados,\n","    SUM(precio) AS monto_total_invertido\n","FROM fact_table\n","WHERE localidad_evento_estado = 'Escaneada OK'  -- Consideramos los tickets efectivamente utilizados\n","GROUP BY nombre_apellido_cliente, dni_cliente\n","ORDER BY monto_total_invertido DESC, total_tickets_comprados DESC\n","LIMIT 10;\n","\"\"\"\n","\n","# Consulta para calcular el stock de localidades disponibles (faltaria hacerlo por fecha)\n","\n","\n","query_stock_localidades = \"\"\"\n","SELECT\n","    nombre_evento,\n","    COUNT(*) AS stock_localidades_disponibles\n","FROM fact_table\n","WHERE localidad_evento_estado IN ('Disponible', 'Anulada')\n","  AND nombre_evento = 'Campeonato Argentino'\n","GROUP BY nombre_evento;\n","\"\"\"\n","\n","\n","# Ejecutar consultas\n","df_resultado = pd.read_sql(query, conn_dw)\n","df_eventos_mas_vendidos = pd.read_sql(query_eventos_mas_vendidos, conn_dw)\n","df_equipo_mas_fans = pd.read_sql(query_equipo_con_mas_fans, conn_dw)\n","df_mayor_eventos = pd.read_sql(query_mayor_cantidad_eventos, conn_dw)\n","df_asistencia_media = pd.read_sql(query_asistencia_media_mensual, conn_dw)\n","df_top_clientes_por_equipo = pd.read_sql(query_top_clientes_por_equipo, conn_dw)\n","df_top_clientes_ticketera = pd.read_sql(query_top_clientes_ticketera, conn_dw)\n","df_stock_localidades = pd.read_sql(query_stock_localidades, conn_dw)\n","\n","\n","# Mostrar resultados\n","\n","print(\"Total de Ventas por Equipo con Mes y Año:\")\n","print(df_resultado)\n","print (\"Eventos que han vendido mas tickets\")\n","print(df_eventos_mas_vendidos)\n","print (\"Equipo con mas Fans\")\n","print(df_equipo_mas_fans)\n","print(\"Mes con mayor cantidad de eventos organizados:\")\n","print(df_mayor_eventos)\n","print(\"Asistencia media mensual:\")\n","print(df_asistencia_media)\n","print(\"Top 10 de clientes por equipo:\")\n","print(df_top_clientes_por_equipo)\n","print(\"Top 10 de clientes a nivel ticketera:\")\n","print(df_top_clientes_ticketera)\n","print(\"Stock de localidades disponibles para el evento:\")\n","print(df_stock_localidades)\n","\n","# Cerrar conexión\n","conn_dw.close()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QMienx4r3NJ0","executionInfo":{"status":"ok","timestamp":1732500148886,"user_tz":180,"elapsed":289,"user":{"displayName":"Nicolas Prosperi","userId":"10161961860091181701"}},"outputId":"c3451782-e6ff-4f06-cf81-1b3212e6f079"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Total de Ventas por Equipo con Mes y Año:\n","             nombre_equipo  total_ventas_mes  objetivos_mes fecha_id\n","0             Boca Juniors            120000      1500000.0   202406\n","1  Estudiantes de La Plata            117800      2700000.0   202406\n","2            Independiente            120000      1300000.0   202406\n","3              San Lorenzo            115200      4000000.0   202406\n","Eventos que han vendido mas tickets\n","             nombre_equipo  total_ventas\n","0            Independiente        120000\n","1             Boca Juniors        120000\n","2  Estudiantes de La Plata        117800\n","3              San Lorenzo        115200\n","Equipo con mas Fans\n","   nombre_equipo  total_ventas\n","0  Independiente        120000\n","Mes con mayor cantidad de eventos organizados:\n","  mes  total_eventos\n","0  06              4\n","Asistencia media mensual:\n","   asistencia_media_mensual\n","0                  118250.0\n","Top 10 de clientes por equipo:\n","             nombre_equipo          cliente                  dni_cliente  \\\n","0             Boca Juniors       Juan Pérez         juanperez@domain.com   \n","1  Estudiantes de La Plata  Carla Fernandez  carla.fernandez@example.com   \n","2            Independiente     Ana González      anagaonzalez@domain.com   \n","3              San Lorenzo    Pedro Ramírez      pedroramirez@domain.com   \n","\n","   total_tickets_comprados  monto_total_invertido  \n","0                     1000                 120000  \n","1                      980                 117800  \n","2                     1000                 120000  \n","3                      956                 115200  \n","Top 10 de clientes a nivel ticketera:\n","           cliente                  dni_cliente  total_tickets_comprados  \\\n","0       Juan Pérez         juanperez@domain.com                     1000   \n","1     Ana González      anagaonzalez@domain.com                     1000   \n","2  Carla Fernandez  carla.fernandez@example.com                      980   \n","3    Pedro Ramírez      pedroramirez@domain.com                      956   \n","\n","   monto_total_invertido  \n","0                 120000  \n","1                 120000  \n","2                 117800  \n","3                 115200  \n","Stock de localidades disponibles para el evento:\n","          nombre_evento  stock_localidades_disponibles\n","0  Campeonato Argentino                             64\n"]}]},{"cell_type":"code","source":["import sqlite3\n","import pandas as pd\n","\n","# Conexión a la base de datos del Data Warehouse\n","conn_dw = sqlite3.connect(\"tickets_dw.db\")\n","\n","# Leer todas las tablas del Data Warehouse\n","# Ejemplo: fact_table\n","query = \"SELECT * FROM fact_table\"  # Cambia a la tabla que desees exportar\n","df = pd.read_sql(query, conn_dw)\n","\n","# Guardar el DataFrame como un archivo CSV\n","csv_path = \"fact_table_export.csv\"  # Cambia el nombre del archivo según sea necesario\n","df.to_csv(csv_path, index=False)\n","\n","# Cerrar la conexión\n","conn_dw.close()\n","\n","print(f\"Datos exportados a {csv_path}\")"],"metadata":{"id":"qzEbK9TIDuKt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1Wi3_mdj45uj","executionInfo":{"status":"ok","timestamp":1732497845715,"user_tz":180,"elapsed":2,"user":{"displayName":"Nicolas Prosperi","userId":"10161961860091181701"}}},"execution_count":26,"outputs":[]}]}